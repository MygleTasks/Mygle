<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        UvzcAhGjlgAAAABJRU5ErkJggg==
</value>
  </data>
</root>